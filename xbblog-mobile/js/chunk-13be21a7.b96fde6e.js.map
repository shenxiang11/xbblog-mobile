{"version":3,"sources":["webpack:///./src/pages/article-detail/index.vue?5e57","webpack:///src/pages/article-detail/index.vue","webpack:///./src/pages/article-detail/index.vue?fb6d","webpack:///./src/pages/article-detail/index.vue","webpack:///./node_modules/marked/lib/marked.js","webpack:///./src/pages/article-detail/index.vue?6da8"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","_v","_s","article","title","_f","category","view","attrs","src","thumb","alt","_e","description","domProps","innerHTML","content","create_at","update_at","_m","tag","length","_l","key","_id","name","staticRenderFns","href","target","article_detailvue_type_script_lang_js_","data","mounted","handleShare","fetchArticleDetail","methods","_handleShare","Object","asyncToGenerator","regeneratorRuntime","mark","_callee","_ref","result","_this","wrap","_context","prev","next","axios_default","a","get","concat","encodeURIComponent","location","sent","wx","config","debug","appId","timestamp","nonceStr","noncestr","signature","jsApiList","ready","updateAppMessageShareData","desc","link","imgUrl","updateTimelineShareData","stop","apply","arguments","_fetchArticleDetail","_callee2","_ref2","_context2","$route","params","marked_default","components","SiteHeader","header","pages_article_detailvue_type_script_lang_js_","component","componentNormalizer","__webpack_exports__","global","root","block","newline","code","fences","noop","hr","heading","nptable","blockquote","list","html","def","table","lheading","paragraph","text","Lexer","options","tokens","links","create","marked","defaults","rules","normal","pedantic","gfm","tables","_label","_title","edit","replace","getRegex","bullet","item","source","_tag","_comment","merge","lex","lexer","prototype","token","top","loose","cap","bull","b","listStart","listItems","t","space","i","l","isordered","istask","ischecked","exec","substring","push","type","rtrim","lang","trim","depth","splitCells","align","split","cells","test","ordered","start","match","indexOf","RegExp","smartLists","slice","join","charAt","undefined","task","checked","sanitize","pre","sanitizer","toLowerCase","Error","charCodeAt","inline","escape","autolink","url","reflink","nolink","strong","em","br","del","InlineLexer","renderer","Renderer","breaks","TextRenderer","Parser","slugger","Slugger","seen","encode","escapeTest","escapeReplace","ch","replacements","escapeTestNoEncode","escapeReplaceNoEncode","unescape","_","n","String","fromCharCode","parseInt","regex","opt","val","cleanUrl","base","prot","decodeURIComponent","e","originIndependentUrl","resolveUrl","encodeURI","baseUrls","_punctuation","_escapes","_scheme","_email","_attribute","_href","_extended_email","_backpedal","output","prevCapZero","out","inLink","inRawBlock","outputLink","escapes","codespan","mangle","smartypants","image","Math","random","toString","infostring","escaped","highlight","langPrefix","quote","level","raw","headerIds","headerPrefix","slug","xhtml","body","startatt","listitem","checkbox","tablerow","tablecell","flags","baseUrl","parse","parser","inlineText","reverse","tok","pop","peek","parseText","row","cell","j","errMsg","silent","console","log","value","hasOwnProperty","originalSlug","&","<",">","\"","'","obj","call","tableRow","count","offset","str","curr","splice","c","invert","suffLen","currChar","substr","callback","pending","done","err","message","setOptions","getDefaults","inlineLexer","module","exports","window","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_11_oneOf_1_0_node_modules_css_loader_index_js_ref_11_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_11_oneOf_1_2_node_modules_stylus_loader_index_js_ref_11_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_index_vue_vue_type_style_index_0_id_c243e3b6_scoped_true_lang_stylus___WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_11_oneOf_1_0_node_modules_css_loader_index_js_ref_11_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_11_oneOf_1_2_node_modules_stylus_loader_index_js_ref_11_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_index_vue_vue_type_style_index_0_id_c243e3b6_scoped_true_lang_stylus___WEBPACK_IMPORTED_MODULE_0___default"],"mappings":"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","file":"js/chunk-13be21a7.b96fde6e.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{},[_c('site-header'),_c('div',{staticClass:\"article\"},[_c('h2',{staticClass:\"title\"},[_vm._v(_vm._s(_vm.article.title))]),_c('div',{staticClass:\"meta\"},[_c('div',{staticClass:\"meta-item category\"},[_c('i',{staticClass:\"iconfont icon-mulu\"}),_vm._v(_vm._s(_vm._f(\"category\")(_vm.article.category))+\"\\n      \")]),_c('div',{staticClass:\"meta-item pvs\"},[_vm._v(\"\\n        \"+_vm._s(_vm.article.view)+\"次阅读\\n      \")])]),(_vm.article.thumb)?_c('div',{staticClass:\"thumb\"},[_c('img',{attrs:{\"src\":_vm.article.thumb,\"alt\":\"\"}})]):_vm._e(),(_vm.article.description)?_c('p',{staticClass:\"description\"},[_vm._v(_vm._s(_vm.article.description))]):_vm._e(),_c('div',{staticClass:\"markdown-body\",domProps:{\"innerHTML\":_vm._s(_vm.article.content)}}),_c('div',{staticClass:\"article-info\"},[_c('div',{staticClass:\"created-at\"},[_vm._v(\"发布时间：\"+_vm._s(_vm._f(\"datetime\")(_vm.article.create_at)))]),_c('div',{staticClass:\"updated-at\"},[_vm._v(\"更新时间：\"+_vm._s(_vm._f(\"datetime\")(_vm.article.update_at)))]),_vm._m(0)]),(_vm.article.tag && _vm.article.tag.length)?_c('div',{staticClass:\"tags\"},_vm._l((_vm.article.tag),function(tag){return _c('span',{key:tag._id,staticClass:\"tag\"},[_vm._v(_vm._s(tag.name))])}),0):_vm._e()])],1)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"copyright\"},[_vm._v(\"版权声明：自由转载-署名-非商业性使用\"),_c('span',[_vm._v(\"  |  \")]),_c('a',{attrs:{\"href\":\"https://creativecommons.org/licenses/by-nc/3.0/cn/deed.zh\",\"target\":\"_blank\"}},[_vm._v(\"CC BY-NC 3.0 CN\")])])}]\n\nexport { render, staticRenderFns }","<template>\n  <div class=\"\">\n    <site-header />\n    <div class=\"article\">\n      <h2 class=\"title\">{{ article.title }}</h2>\n      <div class=\"meta\">\n        <div class=\"meta-item category\">\n          <i class=\"iconfont icon-mulu\"/>{{ article.category | category }}\n        </div>\n        <div class=\"meta-item pvs\">\n          {{ article.view }}次阅读\n        </div>\n      </div>\n      <div\n        v-if=\"article.thumb\"\n        class=\"thumb\">\n        <img\n          :src=\"article.thumb\"\n          alt=\"\">\n      </div>\n      <p\n        v-if=\"article.description\"\n        class=\"description\">{{ article.description }}</p>\n      <div\n        class=\"markdown-body\"\n        v-html=\"article.content\" />\n      <div class=\"article-info\">\n        <div class=\"created-at\">发布时间：{{ article.create_at | datetime }}</div>\n        <div class=\"updated-at\">更新时间：{{ article.update_at | datetime }}</div>\n        <div class=\"copyright\">版权声明：自由转载-署名-非商业性使用<span>&nbsp;&nbsp;|&nbsp;&nbsp;</span>\n          <a\n            href=\"https://creativecommons.org/licenses/by-nc/3.0/cn/deed.zh\"\n            target=\"_blank\">CC BY-NC 3.0 CN</a>\n        </div>\n      </div>\n      <div\n        v-if=\"article.tag && article.tag.length\"\n        class=\"tags\">\n        <span\n          v-for=\"tag in article.tag\"\n          :key=\"tag._id\"\n          class=\"tag\">{{ tag.name }}</span>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport Header from '@/components/header'\nimport axios from 'axios'\nimport marked from 'marked'\n\nexport default {\n  name: 'ArticleDetail',\n  data () {\n    return {\n      article: {}\n    }\n  },\n  mounted () {\n    this.handleShare()\n    this.fetchArticleDetail()\n  },\n  methods: {\n    async handleShare () {\n      const { data: { result } } = await axios.get(`/api/wechat/params?url=${encodeURIComponent(location.href)}`)\n      const _this = this\n\n      wx.config({\n        debug: false, // 开启调试模式,调用的所有api的返回值会在客户端alert出来，若要查看传入的参数，可以在pc端打开，参数信息会通过log打出，仅在pc端时才会打印。\n        appId: result.appId, // 必填，公众号的唯一标识\n        timestamp: result.timestamp, // 必填，生成签名的时间戳\n        nonceStr: result.noncestr, // 必填，生成签名的随机串\n        signature: result.signature,// 必填，签名\n        jsApiList: ['updateAppMessageShareData', 'updateTimelineShareData'] // 必填，需要使用的JS接口列表\n      })\n\n      wx.ready(function () {      //需在用户可能点击分享按钮前就先调用\n        wx.updateAppMessageShareData({\n          title: _this.article.title, // 分享标题\n          desc: _this.article.description,\n          link: location.href, // 分享链接，该链接域名或路径必须与当前页面对应的公众号JS安全域名一致\n          imgUrl: _this.article.thumb // 分享图标\n        })\n        wx.updateTimelineShareData({\n          title: _this.article.title, // 分享标题\n          desc: _this.article.description,\n          link: location.href, // 分享链接，该链接域名或路径必须与当前页面对应的公众号JS安全域名一致\n          imgUrl: _this.article.thumb // 分享图标\n        })\n      })\n    },\n    async fetchArticleDetail () {\n      const { data: { result } } = await axios.get(`/api/article/client/${this.$route.params._id}`)\n\n      result.content = marked(result.content)\n\n      this.article = result\n    }\n  },\n  components: {\n    SiteHeader: Header\n  }\n}\n</script>\n\n<style scoped lang=\"stylus\">\n.article {\n  padding: 16px;\n  box-sizing: border-box;\n  line-height: 1.4;\n  background-color: hsla(0,0%,100%,0.8);\n  .title {\n    margin: 16px 0;\n    font-size: 20px;\n    text-align: center;\n    color: rgba(0,0,0,0.65);\n  }\n  .meta {\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    align-items: center;\n    flex-wrap: nowrap;\n    margin: 12px 0 16px;\n    color: rgba(0,0,0,0.43);\n    font-size: 12px;\n    .meta-item {\n      display: flex;\n      flex-direction: row;\n      justify-content: flex-start;\n      align-items: center;\n      flex-wrap: nowrap;\n      position: relative;\n      margin-right: 12px;\n      &:not(:first-of-type):before {\n        content: \"\";\n        display: block;\n        width: 2px;\n        height: 2px;\n        box-sizing: border-box;\n        margin-right: 4px;\n        border: 1px solid rgba(0,0,0,0.43);\n        border-radius: 1px;\n      }\n      .iconfont {\n        margin-right: 8px;\n      }\n      &.category {\n        color: rgba(0,0,0,0.65);\n      }\n    }\n  }\n  .thumb {\n    width: 100%;\n    img {\n      box-sizing: border-box;\n      width: 100%;\n      margin-bottom: 16px;\n      border: 6px solid #e6e6e6;\n    }\n  }\n  .description {\n    font-size: 16px;\n    color: rgba(0,0,0,0.85);\n    font-weight: 300;\n  }\n  .markdown-body {\n    font-size: 16px;\n    font-weight: 300;\n    color: rgba(0,0,0,0.85);\n    user-select: text;\n  }\n  .article-info {\n    font-size: 14px;\n    margin-top: 8px;\n    padding: 8px;\n    line-height: 2;\n    background-color: #f2f2f2;\n    border-left: 4px solid rgba(48,46,49,0.2);\n    font-weight: 300;\n    a {\n      color: rgba(0,0,0,0.65);\n    }\n  }\n  .tags {\n    margin-top: 16px;\n    padding-top: 16px;\n    border-top: 1px dashed #e6e6e6;\n    text-align: center;\n    .tag {\n      display: inline-block;\n      margin: 0 8px 8px 0;\n      padding: 4px 8px;\n      border: 1px solid #e6e6e6;\n      font-size: 12px;\n      border-radius: 4px;\n      transition: all .3s ease;\n    }\n  }\n}\n</style>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??ref--16-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??ref--16-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=c243e3b6&scoped=true&\"\nimport script from \"./index.vue?vue&type=script&lang=js&\"\nexport * from \"./index.vue?vue&type=script&lang=js&\"\nimport style0 from \"./index.vue?vue&type=style&index=0&id=c243e3b6&scoped=true&lang=stylus&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"c243e3b6\",\n  null\n  \n)\n\nexport default component.exports","/**\n * marked - a markdown parser\n * Copyright (c) 2011-2018, Christopher Jeffrey. (MIT Licensed)\n * https://github.com/markedjs/marked\n */\n\n;(function(root) {\n'use strict';\n\n/**\n * Block-Level Grammar\n */\n\nvar block = {\n  newline: /^\\n+/,\n  code: /^( {4}[^\\n]+\\n*)+/,\n  fences: noop,\n  hr: /^ {0,3}((?:- *){3,}|(?:_ *){3,}|(?:\\* *){3,})(?:\\n+|$)/,\n  heading: /^ *(#{1,6}) *([^\\n]+?) *(?:#+ *)?(?:\\n+|$)/,\n  nptable: noop,\n  blockquote: /^( {0,3}> ?(paragraph|[^\\n]*)(?:\\n|$))+/,\n  list: /^( {0,3})(bull) [\\s\\S]+?(?:hr|def|\\n{2,}(?! )(?!\\1bull )\\n*|\\s*$)/,\n  html: '^ {0,3}(?:' // optional indentation\n    + '<(script|pre|style)[\\\\s>][\\\\s\\\\S]*?(?:</\\\\1>[^\\\\n]*\\\\n+|$)' // (1)\n    + '|comment[^\\\\n]*(\\\\n+|$)' // (2)\n    + '|<\\\\?[\\\\s\\\\S]*?\\\\?>\\\\n*' // (3)\n    + '|<![A-Z][\\\\s\\\\S]*?>\\\\n*' // (4)\n    + '|<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>\\\\n*' // (5)\n    + '|</?(tag)(?: +|\\\\n|/?>)[\\\\s\\\\S]*?(?:\\\\n{2,}|$)' // (6)\n    + '|<(?!script|pre|style)([a-z][\\\\w-]*)(?:attribute)*? */?>(?=\\\\h*\\\\n)[\\\\s\\\\S]*?(?:\\\\n{2,}|$)' // (7) open tag\n    + '|</(?!script|pre|style)[a-z][\\\\w-]*\\\\s*>(?=\\\\h*\\\\n)[\\\\s\\\\S]*?(?:\\\\n{2,}|$)' // (7) closing tag\n    + ')',\n  def: /^ {0,3}\\[(label)\\]: *\\n? *<?([^\\s>]+)>?(?:(?: +\\n? *| *\\n *)(title))? *(?:\\n+|$)/,\n  table: noop,\n  lheading: /^([^\\n]+)\\n *(=|-){2,} *(?:\\n+|$)/,\n  paragraph: /^([^\\n]+(?:\\n(?!hr|heading|lheading| {0,3}>|<\\/?(?:tag)(?: +|\\n|\\/?>)|<(?:script|pre|style|!--))[^\\n]+)*)/,\n  text: /^[^\\n]+/\n};\n\nblock._label = /(?!\\s*\\])(?:\\\\[\\[\\]]|[^\\[\\]])+/;\nblock._title = /(?:\"(?:\\\\\"?|[^\"\\\\])*\"|'[^'\\n]*(?:\\n[^'\\n]+)*\\n?'|\\([^()]*\\))/;\nblock.def = edit(block.def)\n  .replace('label', block._label)\n  .replace('title', block._title)\n  .getRegex();\n\nblock.bullet = /(?:[*+-]|\\d{1,9}\\.)/;\nblock.item = /^( *)(bull) ?[^\\n]*(?:\\n(?!\\1bull ?)[^\\n]*)*/;\nblock.item = edit(block.item, 'gm')\n  .replace(/bull/g, block.bullet)\n  .getRegex();\n\nblock.list = edit(block.list)\n  .replace(/bull/g, block.bullet)\n  .replace('hr', '\\\\n+(?=\\\\1?(?:(?:- *){3,}|(?:_ *){3,}|(?:\\\\* *){3,})(?:\\\\n+|$))')\n  .replace('def', '\\\\n+(?=' + block.def.source + ')')\n  .getRegex();\n\nblock._tag = 'address|article|aside|base|basefont|blockquote|body|caption'\n  + '|center|col|colgroup|dd|details|dialog|dir|div|dl|dt|fieldset|figcaption'\n  + '|figure|footer|form|frame|frameset|h[1-6]|head|header|hr|html|iframe'\n  + '|legend|li|link|main|menu|menuitem|meta|nav|noframes|ol|optgroup|option'\n  + '|p|param|section|source|summary|table|tbody|td|tfoot|th|thead|title|tr'\n  + '|track|ul';\nblock._comment = /<!--(?!-?>)[\\s\\S]*?-->/;\nblock.html = edit(block.html, 'i')\n  .replace('comment', block._comment)\n  .replace('tag', block._tag)\n  .replace('attribute', / +[a-zA-Z:_][\\w.:-]*(?: *= *\"[^\"\\n]*\"| *= *'[^'\\n]*'| *= *[^\\s\"'=<>`]+)?/)\n  .getRegex();\n\nblock.paragraph = edit(block.paragraph)\n  .replace('hr', block.hr)\n  .replace('heading', block.heading)\n  .replace('lheading', block.lheading)\n  .replace('tag', block._tag) // pars can be interrupted by type (6) html blocks\n  .getRegex();\n\nblock.blockquote = edit(block.blockquote)\n  .replace('paragraph', block.paragraph)\n  .getRegex();\n\n/**\n * Normal Block Grammar\n */\n\nblock.normal = merge({}, block);\n\n/**\n * GFM Block Grammar\n */\n\nblock.gfm = merge({}, block.normal, {\n  fences: /^ {0,3}(`{3,}|~{3,})([^`\\n]*)\\n(?:|([\\s\\S]*?)\\n)(?: {0,3}\\1[~`]* *(?:\\n+|$)|$)/,\n  paragraph: /^/,\n  heading: /^ *(#{1,6}) +([^\\n]+?) *#* *(?:\\n+|$)/\n});\n\nblock.gfm.paragraph = edit(block.paragraph)\n  .replace('(?!', '(?!'\n    + block.gfm.fences.source.replace('\\\\1', '\\\\2') + '|'\n    + block.list.source.replace('\\\\1', '\\\\3') + '|')\n  .getRegex();\n\n/**\n * GFM + Tables Block Grammar\n */\n\nblock.tables = merge({}, block.gfm, {\n  nptable: /^ *([^|\\n ].*\\|.*)\\n *([-:]+ *\\|[-| :]*)(?:\\n((?:.*[^>\\n ].*(?:\\n|$))*)\\n*|$)/,\n  table: /^ *\\|(.+)\\n *\\|?( *[-:]+[-| :]*)(?:\\n((?: *[^>\\n ].*(?:\\n|$))*)\\n*|$)/\n});\n\n/**\n * Pedantic grammar\n */\n\nblock.pedantic = merge({}, block.normal, {\n  html: edit(\n    '^ *(?:comment *(?:\\\\n|\\\\s*$)'\n    + '|<(tag)[\\\\s\\\\S]+?</\\\\1> *(?:\\\\n{2,}|\\\\s*$)' // closed tag\n    + '|<tag(?:\"[^\"]*\"|\\'[^\\']*\\'|\\\\s[^\\'\"/>\\\\s]*)*?/?> *(?:\\\\n{2,}|\\\\s*$))')\n    .replace('comment', block._comment)\n    .replace(/tag/g, '(?!(?:'\n      + 'a|em|strong|small|s|cite|q|dfn|abbr|data|time|code|var|samp|kbd|sub'\n      + '|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo|span|br|wbr|ins|del|img)'\n      + '\\\\b)\\\\w+(?!:|[^\\\\w\\\\s@]*@)\\\\b')\n    .getRegex(),\n  def: /^ *\\[([^\\]]+)\\]: *<?([^\\s>]+)>?(?: +([\"(][^\\n]+[\")]))? *(?:\\n+|$)/\n});\n\n/**\n * Block Lexer\n */\n\nfunction Lexer(options) {\n  this.tokens = [];\n  this.tokens.links = Object.create(null);\n  this.options = options || marked.defaults;\n  this.rules = block.normal;\n\n  if (this.options.pedantic) {\n    this.rules = block.pedantic;\n  } else if (this.options.gfm) {\n    if (this.options.tables) {\n      this.rules = block.tables;\n    } else {\n      this.rules = block.gfm;\n    }\n  }\n}\n\n/**\n * Expose Block Rules\n */\n\nLexer.rules = block;\n\n/**\n * Static Lex Method\n */\n\nLexer.lex = function(src, options) {\n  var lexer = new Lexer(options);\n  return lexer.lex(src);\n};\n\n/**\n * Preprocessing\n */\n\nLexer.prototype.lex = function(src) {\n  src = src\n    .replace(/\\r\\n|\\r/g, '\\n')\n    .replace(/\\t/g, '    ')\n    .replace(/\\u00a0/g, ' ')\n    .replace(/\\u2424/g, '\\n');\n\n  return this.token(src, true);\n};\n\n/**\n * Lexing\n */\n\nLexer.prototype.token = function(src, top) {\n  src = src.replace(/^ +$/gm, '');\n  var next,\n      loose,\n      cap,\n      bull,\n      b,\n      item,\n      listStart,\n      listItems,\n      t,\n      space,\n      i,\n      tag,\n      l,\n      isordered,\n      istask,\n      ischecked;\n\n  while (src) {\n    // newline\n    if (cap = this.rules.newline.exec(src)) {\n      src = src.substring(cap[0].length);\n      if (cap[0].length > 1) {\n        this.tokens.push({\n          type: 'space'\n        });\n      }\n    }\n\n    // code\n    if (cap = this.rules.code.exec(src)) {\n      src = src.substring(cap[0].length);\n      cap = cap[0].replace(/^ {4}/gm, '');\n      this.tokens.push({\n        type: 'code',\n        text: !this.options.pedantic\n          ? rtrim(cap, '\\n')\n          : cap\n      });\n      continue;\n    }\n\n    // fences (gfm)\n    if (cap = this.rules.fences.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'code',\n        lang: cap[2] ? cap[2].trim() : cap[2],\n        text: cap[3] || ''\n      });\n      continue;\n    }\n\n    // heading\n    if (cap = this.rules.heading.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'heading',\n        depth: cap[1].length,\n        text: cap[2]\n      });\n      continue;\n    }\n\n    // table no leading pipe (gfm)\n    if (top && (cap = this.rules.nptable.exec(src))) {\n      item = {\n        type: 'table',\n        header: splitCells(cap[1].replace(/^ *| *\\| *$/g, '')),\n        align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n        cells: cap[3] ? cap[3].replace(/\\n$/, '').split('\\n') : []\n      };\n\n      if (item.header.length === item.align.length) {\n        src = src.substring(cap[0].length);\n\n        for (i = 0; i < item.align.length; i++) {\n          if (/^ *-+: *$/.test(item.align[i])) {\n            item.align[i] = 'right';\n          } else if (/^ *:-+: *$/.test(item.align[i])) {\n            item.align[i] = 'center';\n          } else if (/^ *:-+ *$/.test(item.align[i])) {\n            item.align[i] = 'left';\n          } else {\n            item.align[i] = null;\n          }\n        }\n\n        for (i = 0; i < item.cells.length; i++) {\n          item.cells[i] = splitCells(item.cells[i], item.header.length);\n        }\n\n        this.tokens.push(item);\n\n        continue;\n      }\n    }\n\n    // hr\n    if (cap = this.rules.hr.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'hr'\n      });\n      continue;\n    }\n\n    // blockquote\n    if (cap = this.rules.blockquote.exec(src)) {\n      src = src.substring(cap[0].length);\n\n      this.tokens.push({\n        type: 'blockquote_start'\n      });\n\n      cap = cap[0].replace(/^ *> ?/gm, '');\n\n      // Pass `top` to keep the current\n      // \"toplevel\" state. This is exactly\n      // how markdown.pl works.\n      this.token(cap, top);\n\n      this.tokens.push({\n        type: 'blockquote_end'\n      });\n\n      continue;\n    }\n\n    // list\n    if (cap = this.rules.list.exec(src)) {\n      src = src.substring(cap[0].length);\n      bull = cap[2];\n      isordered = bull.length > 1;\n\n      listStart = {\n        type: 'list_start',\n        ordered: isordered,\n        start: isordered ? +bull : '',\n        loose: false\n      };\n\n      this.tokens.push(listStart);\n\n      // Get each top-level item.\n      cap = cap[0].match(this.rules.item);\n\n      listItems = [];\n      next = false;\n      l = cap.length;\n      i = 0;\n\n      for (; i < l; i++) {\n        item = cap[i];\n\n        // Remove the list item's bullet\n        // so it is seen as the next token.\n        space = item.length;\n        item = item.replace(/^ *([*+-]|\\d+\\.) */, '');\n\n        // Outdent whatever the\n        // list item contains. Hacky.\n        if (~item.indexOf('\\n ')) {\n          space -= item.length;\n          item = !this.options.pedantic\n            ? item.replace(new RegExp('^ {1,' + space + '}', 'gm'), '')\n            : item.replace(/^ {1,4}/gm, '');\n        }\n\n        // Determine whether the next list item belongs here.\n        // Backpedal if it does not belong in this list.\n        if (i !== l - 1) {\n          b = block.bullet.exec(cap[i + 1])[0];\n          if (bull.length > 1 ? b.length === 1\n            : (b.length > 1 || (this.options.smartLists && b !== bull))) {\n            src = cap.slice(i + 1).join('\\n') + src;\n            i = l - 1;\n          }\n        }\n\n        // Determine whether item is loose or not.\n        // Use: /(^|\\n)(?! )[^\\n]+\\n\\n(?!\\s*$)/\n        // for discount behavior.\n        loose = next || /\\n\\n(?!\\s*$)/.test(item);\n        if (i !== l - 1) {\n          next = item.charAt(item.length - 1) === '\\n';\n          if (!loose) loose = next;\n        }\n\n        if (loose) {\n          listStart.loose = true;\n        }\n\n        // Check for task list items\n        istask = /^\\[[ xX]\\] /.test(item);\n        ischecked = undefined;\n        if (istask) {\n          ischecked = item[1] !== ' ';\n          item = item.replace(/^\\[[ xX]\\] +/, '');\n        }\n\n        t = {\n          type: 'list_item_start',\n          task: istask,\n          checked: ischecked,\n          loose: loose\n        };\n\n        listItems.push(t);\n        this.tokens.push(t);\n\n        // Recurse.\n        this.token(item, false);\n\n        this.tokens.push({\n          type: 'list_item_end'\n        });\n      }\n\n      if (listStart.loose) {\n        l = listItems.length;\n        i = 0;\n        for (; i < l; i++) {\n          listItems[i].loose = true;\n        }\n      }\n\n      this.tokens.push({\n        type: 'list_end'\n      });\n\n      continue;\n    }\n\n    // html\n    if (cap = this.rules.html.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: this.options.sanitize\n          ? 'paragraph'\n          : 'html',\n        pre: !this.options.sanitizer\n          && (cap[1] === 'pre' || cap[1] === 'script' || cap[1] === 'style'),\n        text: cap[0]\n      });\n      continue;\n    }\n\n    // def\n    if (top && (cap = this.rules.def.exec(src))) {\n      src = src.substring(cap[0].length);\n      if (cap[3]) cap[3] = cap[3].substring(1, cap[3].length - 1);\n      tag = cap[1].toLowerCase().replace(/\\s+/g, ' ');\n      if (!this.tokens.links[tag]) {\n        this.tokens.links[tag] = {\n          href: cap[2],\n          title: cap[3]\n        };\n      }\n      continue;\n    }\n\n    // table (gfm)\n    if (top && (cap = this.rules.table.exec(src))) {\n      item = {\n        type: 'table',\n        header: splitCells(cap[1].replace(/^ *| *\\| *$/g, '')),\n        align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n        cells: cap[3] ? cap[3].replace(/(?: *\\| *)?\\n$/, '').split('\\n') : []\n      };\n\n      if (item.header.length === item.align.length) {\n        src = src.substring(cap[0].length);\n\n        for (i = 0; i < item.align.length; i++) {\n          if (/^ *-+: *$/.test(item.align[i])) {\n            item.align[i] = 'right';\n          } else if (/^ *:-+: *$/.test(item.align[i])) {\n            item.align[i] = 'center';\n          } else if (/^ *:-+ *$/.test(item.align[i])) {\n            item.align[i] = 'left';\n          } else {\n            item.align[i] = null;\n          }\n        }\n\n        for (i = 0; i < item.cells.length; i++) {\n          item.cells[i] = splitCells(\n            item.cells[i].replace(/^ *\\| *| *\\| *$/g, ''),\n            item.header.length);\n        }\n\n        this.tokens.push(item);\n\n        continue;\n      }\n    }\n\n    // lheading\n    if (cap = this.rules.lheading.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'heading',\n        depth: cap[2] === '=' ? 1 : 2,\n        text: cap[1]\n      });\n      continue;\n    }\n\n    // top-level paragraph\n    if (top && (cap = this.rules.paragraph.exec(src))) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'paragraph',\n        text: cap[1].charAt(cap[1].length - 1) === '\\n'\n          ? cap[1].slice(0, -1)\n          : cap[1]\n      });\n      continue;\n    }\n\n    // text\n    if (cap = this.rules.text.exec(src)) {\n      // Top-level should never reach here.\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'text',\n        text: cap[0]\n      });\n      continue;\n    }\n\n    if (src) {\n      throw new Error('Infinite loop on byte: ' + src.charCodeAt(0));\n    }\n  }\n\n  return this.tokens;\n};\n\n/**\n * Inline-Level Grammar\n */\n\nvar inline = {\n  escape: /^\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/,\n  autolink: /^<(scheme:[^\\s\\x00-\\x1f<>]*|email)>/,\n  url: noop,\n  tag: '^comment'\n    + '|^</[a-zA-Z][\\\\w:-]*\\\\s*>' // self-closing tag\n    + '|^<[a-zA-Z][\\\\w-]*(?:attribute)*?\\\\s*/?>' // open tag\n    + '|^<\\\\?[\\\\s\\\\S]*?\\\\?>' // processing instruction, e.g. <?php ?>\n    + '|^<![a-zA-Z]+\\\\s[\\\\s\\\\S]*?>' // declaration, e.g. <!DOCTYPE html>\n    + '|^<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>', // CDATA section\n  link: /^!?\\[(label)\\]\\(href(?:\\s+(title))?\\s*\\)/,\n  reflink: /^!?\\[(label)\\]\\[(?!\\s*\\])((?:\\\\[\\[\\]]?|[^\\[\\]\\\\])+)\\]/,\n  nolink: /^!?\\[(?!\\s*\\])((?:\\[[^\\[\\]]*\\]|\\\\[\\[\\]]|[^\\[\\]])*)\\](?:\\[\\])?/,\n  strong: /^__([^\\s_])__(?!_)|^\\*\\*([^\\s*])\\*\\*(?!\\*)|^__([^\\s][\\s\\S]*?[^\\s])__(?!_)|^\\*\\*([^\\s][\\s\\S]*?[^\\s])\\*\\*(?!\\*)/,\n  em: /^_([^\\s_])_(?!_)|^\\*([^\\s*\"<\\[])\\*(?!\\*)|^_([^\\s][\\s\\S]*?[^\\s_])_(?!_|[^\\spunctuation])|^_([^\\s_][\\s\\S]*?[^\\s])_(?!_|[^\\spunctuation])|^\\*([^\\s\"<\\[][\\s\\S]*?[^\\s*])\\*(?!\\*)|^\\*([^\\s*\"<\\[][\\s\\S]*?[^\\s])\\*(?!\\*)/,\n  code: /^(`+)([^`]|[^`][\\s\\S]*?[^`])\\1(?!`)/,\n  br: /^( {2,}|\\\\)\\n(?!\\s*$)/,\n  del: noop,\n  text: /^(`+|[^`])[\\s\\S]*?(?=[\\\\<!\\[`*]|\\b_| {2,}\\n|$)/\n};\n\n// list of punctuation marks from common mark spec\n// without ` and ] to workaround Rule 17 (inline code blocks/links)\ninline._punctuation = '!\"#$%&\\'()*+,\\\\-./:;<=>?@\\\\[^_{|}~';\ninline.em = edit(inline.em).replace(/punctuation/g, inline._punctuation).getRegex();\n\ninline._escapes = /\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/g;\n\ninline._scheme = /[a-zA-Z][a-zA-Z0-9+.-]{1,31}/;\ninline._email = /[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+(@)[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+(?![-_])/;\ninline.autolink = edit(inline.autolink)\n  .replace('scheme', inline._scheme)\n  .replace('email', inline._email)\n  .getRegex();\n\ninline._attribute = /\\s+[a-zA-Z:_][\\w.:-]*(?:\\s*=\\s*\"[^\"]*\"|\\s*=\\s*'[^']*'|\\s*=\\s*[^\\s\"'=<>`]+)?/;\n\ninline.tag = edit(inline.tag)\n  .replace('comment', block._comment)\n  .replace('attribute', inline._attribute)\n  .getRegex();\n\ninline._label = /(?:\\[[^\\[\\]]*\\]|\\\\[\\[\\]]?|`[^`]*`|[^\\[\\]\\\\])*?/;\ninline._href = /\\s*(<(?:\\\\[<>]?|[^\\s<>\\\\])*>|(?:\\\\[()]?|\\([^\\s\\x00-\\x1f\\\\]*\\)|[^\\s\\x00-\\x1f()\\\\])*?)/;\ninline._title = /\"(?:\\\\\"?|[^\"\\\\])*\"|'(?:\\\\'?|[^'\\\\])*'|\\((?:\\\\\\)?|[^)\\\\])*\\)/;\n\ninline.link = edit(inline.link)\n  .replace('label', inline._label)\n  .replace('href', inline._href)\n  .replace('title', inline._title)\n  .getRegex();\n\ninline.reflink = edit(inline.reflink)\n  .replace('label', inline._label)\n  .getRegex();\n\n/**\n * Normal Inline Grammar\n */\n\ninline.normal = merge({}, inline);\n\n/**\n * Pedantic Inline Grammar\n */\n\ninline.pedantic = merge({}, inline.normal, {\n  strong: /^__(?=\\S)([\\s\\S]*?\\S)__(?!_)|^\\*\\*(?=\\S)([\\s\\S]*?\\S)\\*\\*(?!\\*)/,\n  em: /^_(?=\\S)([\\s\\S]*?\\S)_(?!_)|^\\*(?=\\S)([\\s\\S]*?\\S)\\*(?!\\*)/,\n  link: edit(/^!?\\[(label)\\]\\((.*?)\\)/)\n    .replace('label', inline._label)\n    .getRegex(),\n  reflink: edit(/^!?\\[(label)\\]\\s*\\[([^\\]]*)\\]/)\n    .replace('label', inline._label)\n    .getRegex()\n});\n\n/**\n * GFM Inline Grammar\n */\n\ninline.gfm = merge({}, inline.normal, {\n  escape: edit(inline.escape).replace('])', '~|])').getRegex(),\n  _extended_email: /[A-Za-z0-9._+-]+(@)[a-zA-Z0-9-_]+(?:\\.[a-zA-Z0-9-_]*[a-zA-Z0-9])+(?![-_])/,\n  url: /^((?:ftp|https?):\\/\\/|www\\.)(?:[a-zA-Z0-9\\-]+\\.?)+[^\\s<]*|^email/,\n  _backpedal: /(?:[^?!.,:;*_~()&]+|\\([^)]*\\)|&(?![a-zA-Z0-9]+;$)|[?!.,:;*_~)]+(?!$))+/,\n  del: /^~+(?=\\S)([\\s\\S]*?\\S)~+/,\n  text: edit(inline.text)\n    .replace(']|', '~]|')\n    .replace('|$', '|https?://|ftp://|www\\\\.|[a-zA-Z0-9.!#$%&\\'*+/=?^_`{\\\\|}~-]+@|$')\n    .getRegex()\n});\n\ninline.gfm.url = edit(inline.gfm.url, 'i')\n  .replace('email', inline.gfm._extended_email)\n  .getRegex();\n/**\n * GFM + Line Breaks Inline Grammar\n */\n\ninline.breaks = merge({}, inline.gfm, {\n  br: edit(inline.br).replace('{2,}', '*').getRegex(),\n  text: edit(inline.gfm.text).replace('{2,}', '*').getRegex()\n});\n\n/**\n * Inline Lexer & Compiler\n */\n\nfunction InlineLexer(links, options) {\n  this.options = options || marked.defaults;\n  this.links = links;\n  this.rules = inline.normal;\n  this.renderer = this.options.renderer || new Renderer();\n  this.renderer.options = this.options;\n\n  if (!this.links) {\n    throw new Error('Tokens array requires a `links` property.');\n  }\n\n  if (this.options.pedantic) {\n    this.rules = inline.pedantic;\n  } else if (this.options.gfm) {\n    if (this.options.breaks) {\n      this.rules = inline.breaks;\n    } else {\n      this.rules = inline.gfm;\n    }\n  }\n}\n\n/**\n * Expose Inline Rules\n */\n\nInlineLexer.rules = inline;\n\n/**\n * Static Lexing/Compiling Method\n */\n\nInlineLexer.output = function(src, links, options) {\n  var inline = new InlineLexer(links, options);\n  return inline.output(src);\n};\n\n/**\n * Lexing/Compiling\n */\n\nInlineLexer.prototype.output = function(src) {\n  var out = '',\n      link,\n      text,\n      href,\n      title,\n      cap,\n      prevCapZero;\n\n  while (src) {\n    // escape\n    if (cap = this.rules.escape.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += escape(cap[1]);\n      continue;\n    }\n\n    // tag\n    if (cap = this.rules.tag.exec(src)) {\n      if (!this.inLink && /^<a /i.test(cap[0])) {\n        this.inLink = true;\n      } else if (this.inLink && /^<\\/a>/i.test(cap[0])) {\n        this.inLink = false;\n      }\n      if (!this.inRawBlock && /^<(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n        this.inRawBlock = true;\n      } else if (this.inRawBlock && /^<\\/(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n        this.inRawBlock = false;\n      }\n\n      src = src.substring(cap[0].length);\n      out += this.options.sanitize\n        ? this.options.sanitizer\n          ? this.options.sanitizer(cap[0])\n          : escape(cap[0])\n        : cap[0];\n      continue;\n    }\n\n    // link\n    if (cap = this.rules.link.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.inLink = true;\n      href = cap[2];\n      if (this.options.pedantic) {\n        link = /^([^'\"]*[^\\s])\\s+(['\"])(.*)\\2/.exec(href);\n\n        if (link) {\n          href = link[1];\n          title = link[3];\n        } else {\n          title = '';\n        }\n      } else {\n        title = cap[3] ? cap[3].slice(1, -1) : '';\n      }\n      href = href.trim().replace(/^<([\\s\\S]*)>$/, '$1');\n      out += this.outputLink(cap, {\n        href: InlineLexer.escapes(href),\n        title: InlineLexer.escapes(title)\n      });\n      this.inLink = false;\n      continue;\n    }\n\n    // reflink, nolink\n    if ((cap = this.rules.reflink.exec(src))\n        || (cap = this.rules.nolink.exec(src))) {\n      src = src.substring(cap[0].length);\n      link = (cap[2] || cap[1]).replace(/\\s+/g, ' ');\n      link = this.links[link.toLowerCase()];\n      if (!link || !link.href) {\n        out += cap[0].charAt(0);\n        src = cap[0].substring(1) + src;\n        continue;\n      }\n      this.inLink = true;\n      out += this.outputLink(cap, link);\n      this.inLink = false;\n      continue;\n    }\n\n    // strong\n    if (cap = this.rules.strong.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.strong(this.output(cap[4] || cap[3] || cap[2] || cap[1]));\n      continue;\n    }\n\n    // em\n    if (cap = this.rules.em.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.em(this.output(cap[6] || cap[5] || cap[4] || cap[3] || cap[2] || cap[1]));\n      continue;\n    }\n\n    // code\n    if (cap = this.rules.code.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.codespan(escape(cap[2].trim(), true));\n      continue;\n    }\n\n    // br\n    if (cap = this.rules.br.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.br();\n      continue;\n    }\n\n    // del (gfm)\n    if (cap = this.rules.del.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.del(this.output(cap[1]));\n      continue;\n    }\n\n    // autolink\n    if (cap = this.rules.autolink.exec(src)) {\n      src = src.substring(cap[0].length);\n      if (cap[2] === '@') {\n        text = escape(this.mangle(cap[1]));\n        href = 'mailto:' + text;\n      } else {\n        text = escape(cap[1]);\n        href = text;\n      }\n      out += this.renderer.link(href, null, text);\n      continue;\n    }\n\n    // url (gfm)\n    if (!this.inLink && (cap = this.rules.url.exec(src))) {\n      if (cap[2] === '@') {\n        text = escape(cap[0]);\n        href = 'mailto:' + text;\n      } else {\n        // do extended autolink path validation\n        do {\n          prevCapZero = cap[0];\n          cap[0] = this.rules._backpedal.exec(cap[0])[0];\n        } while (prevCapZero !== cap[0]);\n        text = escape(cap[0]);\n        if (cap[1] === 'www.') {\n          href = 'http://' + text;\n        } else {\n          href = text;\n        }\n      }\n      src = src.substring(cap[0].length);\n      out += this.renderer.link(href, null, text);\n      continue;\n    }\n\n    // text\n    if (cap = this.rules.text.exec(src)) {\n      src = src.substring(cap[0].length);\n      if (this.inRawBlock) {\n        out += this.renderer.text(cap[0]);\n      } else {\n        out += this.renderer.text(escape(this.smartypants(cap[0])));\n      }\n      continue;\n    }\n\n    if (src) {\n      throw new Error('Infinite loop on byte: ' + src.charCodeAt(0));\n    }\n  }\n\n  return out;\n};\n\nInlineLexer.escapes = function(text) {\n  return text ? text.replace(InlineLexer.rules._escapes, '$1') : text;\n};\n\n/**\n * Compile Link\n */\n\nInlineLexer.prototype.outputLink = function(cap, link) {\n  var href = link.href,\n      title = link.title ? escape(link.title) : null;\n\n  return cap[0].charAt(0) !== '!'\n    ? this.renderer.link(href, title, this.output(cap[1]))\n    : this.renderer.image(href, title, escape(cap[1]));\n};\n\n/**\n * Smartypants Transformations\n */\n\nInlineLexer.prototype.smartypants = function(text) {\n  if (!this.options.smartypants) return text;\n  return text\n    // em-dashes\n    .replace(/---/g, '\\u2014')\n    // en-dashes\n    .replace(/--/g, '\\u2013')\n    // opening singles\n    .replace(/(^|[-\\u2014/(\\[{\"\\s])'/g, '$1\\u2018')\n    // closing singles & apostrophes\n    .replace(/'/g, '\\u2019')\n    // opening doubles\n    .replace(/(^|[-\\u2014/(\\[{\\u2018\\s])\"/g, '$1\\u201c')\n    // closing doubles\n    .replace(/\"/g, '\\u201d')\n    // ellipses\n    .replace(/\\.{3}/g, '\\u2026');\n};\n\n/**\n * Mangle Links\n */\n\nInlineLexer.prototype.mangle = function(text) {\n  if (!this.options.mangle) return text;\n  var out = '',\n      l = text.length,\n      i = 0,\n      ch;\n\n  for (; i < l; i++) {\n    ch = text.charCodeAt(i);\n    if (Math.random() > 0.5) {\n      ch = 'x' + ch.toString(16);\n    }\n    out += '&#' + ch + ';';\n  }\n\n  return out;\n};\n\n/**\n * Renderer\n */\n\nfunction Renderer(options) {\n  this.options = options || marked.defaults;\n}\n\nRenderer.prototype.code = function(code, infostring, escaped) {\n  var lang = (infostring || '').match(/\\S*/)[0];\n  if (this.options.highlight) {\n    var out = this.options.highlight(code, lang);\n    if (out != null && out !== code) {\n      escaped = true;\n      code = out;\n    }\n  }\n\n  if (!lang) {\n    return '<pre><code>'\n      + (escaped ? code : escape(code, true))\n      + '</code></pre>';\n  }\n\n  return '<pre><code class=\"'\n    + this.options.langPrefix\n    + escape(lang, true)\n    + '\">'\n    + (escaped ? code : escape(code, true))\n    + '</code></pre>\\n';\n};\n\nRenderer.prototype.blockquote = function(quote) {\n  return '<blockquote>\\n' + quote + '</blockquote>\\n';\n};\n\nRenderer.prototype.html = function(html) {\n  return html;\n};\n\nRenderer.prototype.heading = function(text, level, raw, slugger) {\n  if (this.options.headerIds) {\n    return '<h'\n      + level\n      + ' id=\"'\n      + this.options.headerPrefix\n      + slugger.slug(raw)\n      + '\">'\n      + text\n      + '</h'\n      + level\n      + '>\\n';\n  }\n  // ignore IDs\n  return '<h' + level + '>' + text + '</h' + level + '>\\n';\n};\n\nRenderer.prototype.hr = function() {\n  return this.options.xhtml ? '<hr/>\\n' : '<hr>\\n';\n};\n\nRenderer.prototype.list = function(body, ordered, start) {\n  var type = ordered ? 'ol' : 'ul',\n      startatt = (ordered && start !== 1) ? (' start=\"' + start + '\"') : '';\n  return '<' + type + startatt + '>\\n' + body + '</' + type + '>\\n';\n};\n\nRenderer.prototype.listitem = function(text) {\n  return '<li>' + text + '</li>\\n';\n};\n\nRenderer.prototype.checkbox = function(checked) {\n  return '<input '\n    + (checked ? 'checked=\"\" ' : '')\n    + 'disabled=\"\" type=\"checkbox\"'\n    + (this.options.xhtml ? ' /' : '')\n    + '> ';\n};\n\nRenderer.prototype.paragraph = function(text) {\n  return '<p>' + text + '</p>\\n';\n};\n\nRenderer.prototype.table = function(header, body) {\n  if (body) body = '<tbody>' + body + '</tbody>';\n\n  return '<table>\\n'\n    + '<thead>\\n'\n    + header\n    + '</thead>\\n'\n    + body\n    + '</table>\\n';\n};\n\nRenderer.prototype.tablerow = function(content) {\n  return '<tr>\\n' + content + '</tr>\\n';\n};\n\nRenderer.prototype.tablecell = function(content, flags) {\n  var type = flags.header ? 'th' : 'td';\n  var tag = flags.align\n    ? '<' + type + ' align=\"' + flags.align + '\">'\n    : '<' + type + '>';\n  return tag + content + '</' + type + '>\\n';\n};\n\n// span level renderer\nRenderer.prototype.strong = function(text) {\n  return '<strong>' + text + '</strong>';\n};\n\nRenderer.prototype.em = function(text) {\n  return '<em>' + text + '</em>';\n};\n\nRenderer.prototype.codespan = function(text) {\n  return '<code>' + text + '</code>';\n};\n\nRenderer.prototype.br = function() {\n  return this.options.xhtml ? '<br/>' : '<br>';\n};\n\nRenderer.prototype.del = function(text) {\n  return '<del>' + text + '</del>';\n};\n\nRenderer.prototype.link = function(href, title, text) {\n  href = cleanUrl(this.options.sanitize, this.options.baseUrl, href);\n  if (href === null) {\n    return text;\n  }\n  var out = '<a href=\"' + escape(href) + '\"';\n  if (title) {\n    out += ' title=\"' + title + '\"';\n  }\n  out += '>' + text + '</a>';\n  return out;\n};\n\nRenderer.prototype.image = function(href, title, text) {\n  href = cleanUrl(this.options.sanitize, this.options.baseUrl, href);\n  if (href === null) {\n    return text;\n  }\n\n  var out = '<img src=\"' + href + '\" alt=\"' + text + '\"';\n  if (title) {\n    out += ' title=\"' + title + '\"';\n  }\n  out += this.options.xhtml ? '/>' : '>';\n  return out;\n};\n\nRenderer.prototype.text = function(text) {\n  return text;\n};\n\n/**\n * TextRenderer\n * returns only the textual part of the token\n */\n\nfunction TextRenderer() {}\n\n// no need for block level renderers\n\nTextRenderer.prototype.strong =\nTextRenderer.prototype.em =\nTextRenderer.prototype.codespan =\nTextRenderer.prototype.del =\nTextRenderer.prototype.text = function (text) {\n  return text;\n};\n\nTextRenderer.prototype.link =\nTextRenderer.prototype.image = function(href, title, text) {\n  return '' + text;\n};\n\nTextRenderer.prototype.br = function() {\n  return '';\n};\n\n/**\n * Parsing & Compiling\n */\n\nfunction Parser(options) {\n  this.tokens = [];\n  this.token = null;\n  this.options = options || marked.defaults;\n  this.options.renderer = this.options.renderer || new Renderer();\n  this.renderer = this.options.renderer;\n  this.renderer.options = this.options;\n  this.slugger = new Slugger();\n}\n\n/**\n * Static Parse Method\n */\n\nParser.parse = function(src, options) {\n  var parser = new Parser(options);\n  return parser.parse(src);\n};\n\n/**\n * Parse Loop\n */\n\nParser.prototype.parse = function(src) {\n  this.inline = new InlineLexer(src.links, this.options);\n  // use an InlineLexer with a TextRenderer to extract pure text\n  this.inlineText = new InlineLexer(\n    src.links,\n    merge({}, this.options, {renderer: new TextRenderer()})\n  );\n  this.tokens = src.reverse();\n\n  var out = '';\n  while (this.next()) {\n    out += this.tok();\n  }\n\n  return out;\n};\n\n/**\n * Next Token\n */\n\nParser.prototype.next = function() {\n  return this.token = this.tokens.pop();\n};\n\n/**\n * Preview Next Token\n */\n\nParser.prototype.peek = function() {\n  return this.tokens[this.tokens.length - 1] || 0;\n};\n\n/**\n * Parse Text Tokens\n */\n\nParser.prototype.parseText = function() {\n  var body = this.token.text;\n\n  while (this.peek().type === 'text') {\n    body += '\\n' + this.next().text;\n  }\n\n  return this.inline.output(body);\n};\n\n/**\n * Parse Current Token\n */\n\nParser.prototype.tok = function() {\n  switch (this.token.type) {\n    case 'space': {\n      return '';\n    }\n    case 'hr': {\n      return this.renderer.hr();\n    }\n    case 'heading': {\n      return this.renderer.heading(\n        this.inline.output(this.token.text),\n        this.token.depth,\n        unescape(this.inlineText.output(this.token.text)),\n        this.slugger);\n    }\n    case 'code': {\n      return this.renderer.code(this.token.text,\n        this.token.lang,\n        this.token.escaped);\n    }\n    case 'table': {\n      var header = '',\n          body = '',\n          i,\n          row,\n          cell,\n          j;\n\n      // header\n      cell = '';\n      for (i = 0; i < this.token.header.length; i++) {\n        cell += this.renderer.tablecell(\n          this.inline.output(this.token.header[i]),\n          { header: true, align: this.token.align[i] }\n        );\n      }\n      header += this.renderer.tablerow(cell);\n\n      for (i = 0; i < this.token.cells.length; i++) {\n        row = this.token.cells[i];\n\n        cell = '';\n        for (j = 0; j < row.length; j++) {\n          cell += this.renderer.tablecell(\n            this.inline.output(row[j]),\n            { header: false, align: this.token.align[j] }\n          );\n        }\n\n        body += this.renderer.tablerow(cell);\n      }\n      return this.renderer.table(header, body);\n    }\n    case 'blockquote_start': {\n      body = '';\n\n      while (this.next().type !== 'blockquote_end') {\n        body += this.tok();\n      }\n\n      return this.renderer.blockquote(body);\n    }\n    case 'list_start': {\n      body = '';\n      var ordered = this.token.ordered,\n          start = this.token.start;\n\n      while (this.next().type !== 'list_end') {\n        body += this.tok();\n      }\n\n      return this.renderer.list(body, ordered, start);\n    }\n    case 'list_item_start': {\n      body = '';\n      var loose = this.token.loose;\n\n      if (this.token.task) {\n        body += this.renderer.checkbox(this.token.checked);\n      }\n\n      while (this.next().type !== 'list_item_end') {\n        body += !loose && this.token.type === 'text'\n          ? this.parseText()\n          : this.tok();\n      }\n\n      return this.renderer.listitem(body);\n    }\n    case 'html': {\n      // TODO parse inline content if parameter markdown=1\n      return this.renderer.html(this.token.text);\n    }\n    case 'paragraph': {\n      return this.renderer.paragraph(this.inline.output(this.token.text));\n    }\n    case 'text': {\n      return this.renderer.paragraph(this.parseText());\n    }\n    default: {\n      var errMsg = 'Token with \"' + this.token.type + '\" type was not found.';\n      if (this.options.silent) {\n        console.log(errMsg);\n      } else {\n        throw new Error(errMsg);\n      }\n    }\n  }\n};\n\n/**\n * Slugger generates header id\n */\n\nfunction Slugger () {\n  this.seen = {};\n}\n\n/**\n * Convert string to unique id\n */\n\nSlugger.prototype.slug = function (value) {\n  var slug = value\n    .toLowerCase()\n    .trim()\n    .replace(/[\\u2000-\\u206F\\u2E00-\\u2E7F\\\\'!\"#$%&()*+,./:;<=>?@[\\]^`{|}~]/g, '')\n    .replace(/\\s/g, '-');\n\n  if (this.seen.hasOwnProperty(slug)) {\n    var originalSlug = slug;\n    do {\n      this.seen[originalSlug]++;\n      slug = originalSlug + '-' + this.seen[originalSlug];\n    } while (this.seen.hasOwnProperty(slug));\n  }\n  this.seen[slug] = 0;\n\n  return slug;\n};\n\n/**\n * Helpers\n */\n\nfunction escape(html, encode) {\n  if (encode) {\n    if (escape.escapeTest.test(html)) {\n      return html.replace(escape.escapeReplace, function (ch) { return escape.replacements[ch]; });\n    }\n  } else {\n    if (escape.escapeTestNoEncode.test(html)) {\n      return html.replace(escape.escapeReplaceNoEncode, function (ch) { return escape.replacements[ch]; });\n    }\n  }\n\n  return html;\n}\n\nescape.escapeTest = /[&<>\"']/;\nescape.escapeReplace = /[&<>\"']/g;\nescape.replacements = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  \"'\": '&#39;'\n};\n\nescape.escapeTestNoEncode = /[<>\"']|&(?!#?\\w+;)/;\nescape.escapeReplaceNoEncode = /[<>\"']|&(?!#?\\w+;)/g;\n\nfunction unescape(html) {\n  // explicitly match decimal, hex, and named HTML entities\n  return html.replace(/&(#(?:\\d+)|(?:#x[0-9A-Fa-f]+)|(?:\\w+));?/ig, function(_, n) {\n    n = n.toLowerCase();\n    if (n === 'colon') return ':';\n    if (n.charAt(0) === '#') {\n      return n.charAt(1) === 'x'\n        ? String.fromCharCode(parseInt(n.substring(2), 16))\n        : String.fromCharCode(+n.substring(1));\n    }\n    return '';\n  });\n}\n\nfunction edit(regex, opt) {\n  regex = regex.source || regex;\n  opt = opt || '';\n  return {\n    replace: function(name, val) {\n      val = val.source || val;\n      val = val.replace(/(^|[^\\[])\\^/g, '$1');\n      regex = regex.replace(name, val);\n      return this;\n    },\n    getRegex: function() {\n      return new RegExp(regex, opt);\n    }\n  };\n}\n\nfunction cleanUrl(sanitize, base, href) {\n  if (sanitize) {\n    try {\n      var prot = decodeURIComponent(unescape(href))\n        .replace(/[^\\w:]/g, '')\n        .toLowerCase();\n    } catch (e) {\n      return null;\n    }\n    if (prot.indexOf('javascript:') === 0 || prot.indexOf('vbscript:') === 0 || prot.indexOf('data:') === 0) {\n      return null;\n    }\n  }\n  if (base && !originIndependentUrl.test(href)) {\n    href = resolveUrl(base, href);\n  }\n  try {\n    href = encodeURI(href).replace(/%25/g, '%');\n  } catch (e) {\n    return null;\n  }\n  return href;\n}\n\nfunction resolveUrl(base, href) {\n  if (!baseUrls[' ' + base]) {\n    // we can ignore everything in base after the last slash of its path component,\n    // but we might need to add _that_\n    // https://tools.ietf.org/html/rfc3986#section-3\n    if (/^[^:]+:\\/*[^/]*$/.test(base)) {\n      baseUrls[' ' + base] = base + '/';\n    } else {\n      baseUrls[' ' + base] = rtrim(base, '/', true);\n    }\n  }\n  base = baseUrls[' ' + base];\n\n  if (href.slice(0, 2) === '//') {\n    return base.replace(/:[\\s\\S]*/, ':') + href;\n  } else if (href.charAt(0) === '/') {\n    return base.replace(/(:\\/*[^/]*)[\\s\\S]*/, '$1') + href;\n  } else {\n    return base + href;\n  }\n}\nvar baseUrls = {};\nvar originIndependentUrl = /^$|^[a-z][a-z0-9+.-]*:|^[?#]/i;\n\nfunction noop() {}\nnoop.exec = noop;\n\nfunction merge(obj) {\n  var i = 1,\n      target,\n      key;\n\n  for (; i < arguments.length; i++) {\n    target = arguments[i];\n    for (key in target) {\n      if (Object.prototype.hasOwnProperty.call(target, key)) {\n        obj[key] = target[key];\n      }\n    }\n  }\n\n  return obj;\n}\n\nfunction splitCells(tableRow, count) {\n  // ensure that every cell-delimiting pipe has a space\n  // before it to distinguish it from an escaped pipe\n  var row = tableRow.replace(/\\|/g, function (match, offset, str) {\n        var escaped = false,\n            curr = offset;\n        while (--curr >= 0 && str[curr] === '\\\\') escaped = !escaped;\n        if (escaped) {\n          // odd number of slashes means | is escaped\n          // so we leave it alone\n          return '|';\n        } else {\n          // add space before unescaped |\n          return ' |';\n        }\n      }),\n      cells = row.split(/ \\|/),\n      i = 0;\n\n  if (cells.length > count) {\n    cells.splice(count);\n  } else {\n    while (cells.length < count) cells.push('');\n  }\n\n  for (; i < cells.length; i++) {\n    // leading or trailing whitespace is ignored per the gfm spec\n    cells[i] = cells[i].trim().replace(/\\\\\\|/g, '|');\n  }\n  return cells;\n}\n\n// Remove trailing 'c's. Equivalent to str.replace(/c*$/, '').\n// /c*$/ is vulnerable to REDOS.\n// invert: Remove suffix of non-c chars instead. Default falsey.\nfunction rtrim(str, c, invert) {\n  if (str.length === 0) {\n    return '';\n  }\n\n  // Length of suffix matching the invert condition.\n  var suffLen = 0;\n\n  // Step left until we fail to match the invert condition.\n  while (suffLen < str.length) {\n    var currChar = str.charAt(str.length - suffLen - 1);\n    if (currChar === c && !invert) {\n      suffLen++;\n    } else if (currChar !== c && invert) {\n      suffLen++;\n    } else {\n      break;\n    }\n  }\n\n  return str.substr(0, str.length - suffLen);\n}\n\n/**\n * Marked\n */\n\nfunction marked(src, opt, callback) {\n  // throw error in case of non string input\n  if (typeof src === 'undefined' || src === null) {\n    throw new Error('marked(): input parameter is undefined or null');\n  }\n  if (typeof src !== 'string') {\n    throw new Error('marked(): input parameter is of type '\n      + Object.prototype.toString.call(src) + ', string expected');\n  }\n\n  if (callback || typeof opt === 'function') {\n    if (!callback) {\n      callback = opt;\n      opt = null;\n    }\n\n    opt = merge({}, marked.defaults, opt || {});\n\n    var highlight = opt.highlight,\n        tokens,\n        pending,\n        i = 0;\n\n    try {\n      tokens = Lexer.lex(src, opt);\n    } catch (e) {\n      return callback(e);\n    }\n\n    pending = tokens.length;\n\n    var done = function(err) {\n      if (err) {\n        opt.highlight = highlight;\n        return callback(err);\n      }\n\n      var out;\n\n      try {\n        out = Parser.parse(tokens, opt);\n      } catch (e) {\n        err = e;\n      }\n\n      opt.highlight = highlight;\n\n      return err\n        ? callback(err)\n        : callback(null, out);\n    };\n\n    if (!highlight || highlight.length < 3) {\n      return done();\n    }\n\n    delete opt.highlight;\n\n    if (!pending) return done();\n\n    for (; i < tokens.length; i++) {\n      (function(token) {\n        if (token.type !== 'code') {\n          return --pending || done();\n        }\n        return highlight(token.text, token.lang, function(err, code) {\n          if (err) return done(err);\n          if (code == null || code === token.text) {\n            return --pending || done();\n          }\n          token.text = code;\n          token.escaped = true;\n          --pending || done();\n        });\n      })(tokens[i]);\n    }\n\n    return;\n  }\n  try {\n    if (opt) opt = merge({}, marked.defaults, opt);\n    return Parser.parse(Lexer.lex(src, opt), opt);\n  } catch (e) {\n    e.message += '\\nPlease report this to https://github.com/markedjs/marked.';\n    if ((opt || marked.defaults).silent) {\n      return '<p>An error occurred:</p><pre>'\n        + escape(e.message + '', true)\n        + '</pre>';\n    }\n    throw e;\n  }\n}\n\n/**\n * Options\n */\n\nmarked.options =\nmarked.setOptions = function(opt) {\n  merge(marked.defaults, opt);\n  return marked;\n};\n\nmarked.getDefaults = function () {\n  return {\n    baseUrl: null,\n    breaks: false,\n    gfm: true,\n    headerIds: true,\n    headerPrefix: '',\n    highlight: null,\n    langPrefix: 'language-',\n    mangle: true,\n    pedantic: false,\n    renderer: new Renderer(),\n    sanitize: false,\n    sanitizer: null,\n    silent: false,\n    smartLists: false,\n    smartypants: false,\n    tables: true,\n    xhtml: false\n  };\n};\n\nmarked.defaults = marked.getDefaults();\n\n/**\n * Expose\n */\n\nmarked.Parser = Parser;\nmarked.parser = Parser.parse;\n\nmarked.Renderer = Renderer;\nmarked.TextRenderer = TextRenderer;\n\nmarked.Lexer = Lexer;\nmarked.lexer = Lexer.lex;\n\nmarked.InlineLexer = InlineLexer;\nmarked.inlineLexer = InlineLexer.output;\n\nmarked.Slugger = Slugger;\n\nmarked.parse = marked;\n\nif (typeof module !== 'undefined' && typeof exports === 'object') {\n  module.exports = marked;\n} else if (typeof define === 'function' && define.amd) {\n  define(function() { return marked; });\n} else {\n  root.marked = marked;\n}\n})(this || (typeof window !== 'undefined' ? window : global));\n","import mod from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--11-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--11-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--11-oneOf-1-2!../../../node_modules/stylus-loader/index.js??ref--11-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=style&index=0&id=c243e3b6&scoped=true&lang=stylus&\"; export default mod; export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--11-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--11-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--11-oneOf-1-2!../../../node_modules/stylus-loader/index.js??ref--11-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=style&index=0&id=c243e3b6&scoped=true&lang=stylus&\""],"sourceRoot":""}